/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ControllerPedidos;
import java.util.List;
import controller.ControllerProduto;
import controller.ControllerUsuario;
import dao.DaoUsuario;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import model.Pedidos;
import model.Produto;
/**
 *
 * @author ruanrochaeuok
 */
public class FazerPedido extends javax.swing.JFrame {
   //indice para percorrer a lista e mostrar os items 
    int indice=0;
    //iniciando os controllers que serão usados 
   ControllerUsuario controllerusuario = new ControllerUsuario();
   ControllerProduto controllerproduto = new ControllerProduto();
   ControllerPedidos controllerpedido = new ControllerPedidos();
   //carregando os produtos para uma lista
   List<Produto> lista = controllerproduto.getUpdateProduto();
   //lista para salvar novas alterações dos produtos ao comprar
   List<Produto> listaProdutos = new ArrayList<Produto>();
   //lista para salvar pedidos
   List<Pedidos> listaPedidos = new ArrayList<Pedidos>();
    public FazerPedido() {
        initComponents();
         
       
        if(lista.isEmpty())
        {   //caso a lista esteja vazia,não deixa digitar 
            txtQuantidadeUva.setEnabled(false);
            txtQuantidadeBerry.setEnabled(false);
            txtQuantidadeMorango.setEnabled(false);
            txtQuantidadeLaranja.setEnabled(false);
        }
        else
        {
            indice=0;
            //mostra os produtos na tela
            mostrarProdutoTela();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPAmarelo = new javax.swing.JPanel();
        Uva = new javax.swing.JLabel();
        jPAzul = new javax.swing.JPanel();
        Morango = new javax.swing.JLabel();
        jPRoxo = new javax.swing.JPanel();
        Laranja = new javax.swing.JLabel();
        jPVermelho = new javax.swing.JPanel();
        Berry = new javax.swing.JLabel();
        jLEstoque1 = new javax.swing.JLabel();
        txtEstoqueUva = new javax.swing.JLabel();
        jLEstoque2 = new javax.swing.JLabel();
        jLEstoque3 = new javax.swing.JLabel();
        jLEstoque4 = new javax.swing.JLabel();
        txtEstoqueBerry = new javax.swing.JLabel();
        txtEstoqueMorango = new javax.swing.JLabel();
        txtEstoqueLaranja = new javax.swing.JLabel();
        jLPreco1 = new javax.swing.JLabel();
        precoUva = new javax.swing.JLabel();
        jLPreco2 = new javax.swing.JLabel();
        jLPreco3 = new javax.swing.JLabel();
        jLPreco4 = new javax.swing.JLabel();
        precoMorango = new javax.swing.JLabel();
        precoLaranja = new javax.swing.JLabel();
        precoBerry = new javax.swing.JLabel();
        jLnumeroUnidades0 = new javax.swing.JLabel();
        txtQuantidadeUva = new javax.swing.JTextField();
        jLnumeroUnidades1 = new javax.swing.JLabel();
        jLnumeroUnidades2 = new javax.swing.JLabel();
        jLnumeroUnidades3 = new javax.swing.JLabel();
        txtQuantidadeBerry = new javax.swing.JTextField();
        txtQuantidadeMorango = new javax.swing.JTextField();
        txtQuantidadeLaranja = new javax.swing.JTextField();
        jBAdicionarBerry = new javax.swing.JButton();
        jBAdicionarMorango = new javax.swing.JButton();
        jBAdicionarLaranja = new javax.swing.JButton();
        jBAdicionarUva = new javax.swing.JButton();
        jLTotal = new javax.swing.JLabel();
        precoTotal = new javax.swing.JLabel();
        jBFinalizarCompra = new javax.swing.JButton();
        jBAdicionarOutro = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPAmarelo.setBackground(new java.awt.Color(204, 102, 255));

        Uva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/uvaL.png"))); // NOI18N

        javax.swing.GroupLayout jPAmareloLayout = new javax.swing.GroupLayout(jPAmarelo);
        jPAmarelo.setLayout(jPAmareloLayout);
        jPAmareloLayout.setHorizontalGroup(
            jPAmareloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPAmareloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Uva, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPAmareloLayout.setVerticalGroup(
            jPAmareloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPAmareloLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Uva, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPAzul.setBackground(new java.awt.Color(255, 102, 102));

        Morango.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/mo.png"))); // NOI18N

        javax.swing.GroupLayout jPAzulLayout = new javax.swing.GroupLayout(jPAzul);
        jPAzul.setLayout(jPAzulLayout);
        jPAzulLayout.setHorizontalGroup(
            jPAzulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Morango, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 249, Short.MAX_VALUE)
        );
        jPAzulLayout.setVerticalGroup(
            jPAzulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPAzulLayout.createSequentialGroup()
                .addContainerGap(73, Short.MAX_VALUE)
                .addComponent(Morango, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPRoxo.setBackground(new java.awt.Color(255, 153, 51));

        Laranja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/LaranjaL.png"))); // NOI18N

        javax.swing.GroupLayout jPRoxoLayout = new javax.swing.GroupLayout(jPRoxo);
        jPRoxo.setLayout(jPRoxoLayout);
        jPRoxoLayout.setHorizontalGroup(
            jPRoxoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPRoxoLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(Laranja, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPRoxoLayout.setVerticalGroup(
            jPRoxoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPRoxoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Laranja, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jPVermelho.setBackground(new java.awt.Color(102, 204, 255));

        Berry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/BerryL.png"))); // NOI18N

        javax.swing.GroupLayout jPVermelhoLayout = new javax.swing.GroupLayout(jPVermelho);
        jPVermelho.setLayout(jPVermelhoLayout);
        jPVermelhoLayout.setHorizontalGroup(
            jPVermelhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPVermelhoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Berry, javax.swing.GroupLayout.PREFERRED_SIZE, 226, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPVermelhoLayout.setVerticalGroup(
            jPVermelhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPVermelhoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Berry)
                .addContainerGap())
        );

        jLEstoque1.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jLEstoque1.setText("Estoque:");

        txtEstoqueUva.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N

        jLEstoque2.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jLEstoque2.setText("Estoque:");

        jLEstoque3.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jLEstoque3.setText("Estoque:");

        jLEstoque4.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jLEstoque4.setText("Estoque:");

        txtEstoqueBerry.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N

        txtEstoqueMorango.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N

        txtEstoqueLaranja.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N

        jLPreco1.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jLPreco1.setText("Preço:");

        precoUva.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N

        jLPreco2.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jLPreco2.setText("Preço:");

        jLPreco3.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jLPreco3.setText("Preço:");

        jLPreco4.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jLPreco4.setText("Preço:");

        precoMorango.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N

        precoLaranja.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N

        precoBerry.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N

        jLnumeroUnidades0.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jLnumeroUnidades0.setText("Quantidade:");

        txtQuantidadeUva.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        txtQuantidadeUva.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLnumeroUnidades1.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jLnumeroUnidades1.setText("Quantidade:");

        jLnumeroUnidades2.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jLnumeroUnidades2.setText("Quantidade:");

        jLnumeroUnidades3.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jLnumeroUnidades3.setText("Quantidade:");

        txtQuantidadeBerry.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        txtQuantidadeBerry.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtQuantidadeMorango.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        txtQuantidadeMorango.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtQuantidadeLaranja.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        txtQuantidadeLaranja.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jBAdicionarBerry.setBackground(new java.awt.Color(102, 204, 255));
        jBAdicionarBerry.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jBAdicionarBerry.setText("Adicionar");
        jBAdicionarBerry.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBAdicionarBerry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAdicionarBerryActionPerformed(evt);
            }
        });

        jBAdicionarMorango.setBackground(new java.awt.Color(255, 102, 102));
        jBAdicionarMorango.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jBAdicionarMorango.setText("Adicionar");
        jBAdicionarMorango.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBAdicionarMorango.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAdicionarMorangoActionPerformed(evt);
            }
        });

        jBAdicionarLaranja.setBackground(new java.awt.Color(255, 153, 51));
        jBAdicionarLaranja.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jBAdicionarLaranja.setText("Adicionar");
        jBAdicionarLaranja.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBAdicionarLaranja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAdicionarLaranjaActionPerformed(evt);
            }
        });

        jBAdicionarUva.setBackground(new java.awt.Color(204, 102, 255));
        jBAdicionarUva.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jBAdicionarUva.setText("Adicionar");
        jBAdicionarUva.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBAdicionarUva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAdicionarUvaActionPerformed(evt);
            }
        });

        jLTotal.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jLTotal.setText("Total:");

        precoTotal.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        precoTotal.setText("0");

        jBFinalizarCompra.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jBFinalizarCompra.setText("Finalizar");
        jBFinalizarCompra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jBFinalizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFinalizarCompraActionPerformed(evt);
            }
        });

        jBAdicionarOutro.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jBAdicionarOutro.setText("Outros Items");
        jBAdicionarOutro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jBAdicionarOutro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAdicionarOutroActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Google Sans Medium", 0, 14)); // NOI18N
        jButton1.setText("Voltar");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLEstoque1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEstoqueUva))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLPreco1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(precoUva))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLnumeroUnidades0)
                                .addGap(5, 5, 5)
                                .addComponent(txtQuantidadeUva, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(jBAdicionarUva))
                            .addComponent(jPAmarelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLnumeroUnidades1)
                                .addGap(5, 5, 5)
                                .addComponent(txtQuantidadeBerry, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBAdicionarBerry))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLEstoque2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEstoqueBerry))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLPreco2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(precoBerry))
                                    .addComponent(jPVermelho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLPreco3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(precoMorango))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLEstoque4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEstoqueMorango))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLnumeroUnidades2)
                                .addGap(5, 5, 5)
                                .addComponent(txtQuantidadeMorango, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(jBAdicionarMorango)))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLEstoque3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEstoqueLaranja))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLPreco4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(precoLaranja))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLnumeroUnidades3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQuantidadeLaranja, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBAdicionarLaranja)))
                        .addGap(15, 15, 15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jLTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(precoTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBFinalizarCompra)
                        .addGap(36, 36, 36)
                        .addComponent(jBAdicionarOutro)
                        .addGap(139, 139, 139))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPAzul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jPRoxo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPAzul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPAmarelo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPVermelho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPRoxo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLEstoque1)
                    .addComponent(jLEstoque2)
                    .addComponent(jLEstoque4)
                    .addComponent(jLEstoque3)
                    .addComponent(txtEstoqueUva)
                    .addComponent(txtEstoqueBerry)
                    .addComponent(txtEstoqueMorango)
                    .addComponent(txtEstoqueLaranja))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLPreco1)
                    .addComponent(precoUva)
                    .addComponent(jLPreco2)
                    .addComponent(precoBerry)
                    .addComponent(jLPreco3)
                    .addComponent(precoMorango)
                    .addComponent(jLPreco4)
                    .addComponent(precoLaranja))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLnumeroUnidades0)
                    .addComponent(txtQuantidadeUva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLnumeroUnidades1)
                    .addComponent(txtQuantidadeBerry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantidadeMorango, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLnumeroUnidades2)
                    .addComponent(jLnumeroUnidades3)
                    .addComponent(txtQuantidadeLaranja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAdicionarUva)
                    .addComponent(jBAdicionarBerry)
                    .addComponent(jBAdicionarMorango)
                    .addComponent(jBAdicionarLaranja))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLTotal)
                    .addComponent(precoTotal)
                    .addComponent(jBFinalizarCompra)
                    .addComponent(jBAdicionarOutro)
                    .addComponent(jButton1))
                .addGap(11, 11, 11))
        );

        jMenuBar1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/iconeSair.png"))); // NOI18N
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
          int resposta= JOptionPane.showConfirmDialog(null,"Tem certeza que deseja sair?","Confirmação",JOptionPane.YES_NO_OPTION);
       if(resposta == JOptionPane.YES_OPTION){
               System.exit(0);
       }
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       //para voltar ao menu
        int resposta= JOptionPane.showConfirmDialog(null,"Tem certeza que deseja voltar?","Confirmação",JOptionPane.YES_NO_OPTION);
        if(resposta == JOptionPane.YES_OPTION){
           new TelaCliente().show();
           this.dispose();
       }
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jBAdicionarUvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAdicionarUvaActionPerformed
      //cria um novo pedido
        Pedidos refriuva= new Pedidos();
     //um try catch para caso digite alguma letra ou algo que nao seja numero
        try{
            //pega estoque,quantidade e preco do produto na tela
            int estoque=Integer.parseInt(txtEstoqueUva.getText());
            int quantidade =Integer.parseInt(txtQuantidadeUva.getText());
            float preco=Float.parseFloat(precoUva.getText());
        
        //verifica se o numero digitado é maior que o estoque disponível
        if(quantidade>estoque){
            JOptionPane.showMessageDialog(this, "Não existe estoque suficiente para o sua quantidade desejada");
            txtQuantidadeUva.setText("");
        }
        else{
            //Adiciona Item a uma Lista,para depois ser adicionado no banco
            int resultado=estoque-quantidade;
            txtEstoqueUva.setText(String.valueOf(resultado));
            float total=Float.parseFloat(precoTotal.getText());
            //calcula o preço dos items adicionados ao carrinho e mostra na tela
             float valor=preco*quantidade;
            total+=valor;
            precoTotal.setText(String.valueOf(total));
            refriuva.nome="Refri Uva";
            refriuva.IdProduto=1;
            refriuva.IdUsuario=controllerusuario.IdUsuario();                    
            refriuva.quantidade=String.valueOf(quantidade);
            refriuva.data= new Date();
            refriuva.preco=String.valueOf(preco);
            //adiciona o produto a lista de pedidos
            listaPedidos.add(refriuva);
            
           
            
        }
       }catch(NumberFormatException erro){
       JOptionPane.showMessageDialog(this, "Digite Apenas números"+erro);
       txtQuantidadeUva.setText("");
       }
        //apos escolher o que quer,exclui o que tinha digitado na caixa de texto
     txtQuantidadeUva.setText("");
       
       
    }//GEN-LAST:event_jBAdicionarUvaActionPerformed

    private void jBFinalizarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFinalizarCompraActionPerformed
        //Altera no banco a mudança feita no Item Refri Uva
           /* int estoque=Integer.parseInt(txtEstoqueUva.getText());
            int preco=Integer.parseInt(precoUva.getText());
            Produto AtuRefriUva = new Produto();
            
            AtuRefriUva.nome="Refri Uva";
            AtuRefriUva.id=1;
            AtuRefriUva.preco=String.valueOf(preco);
            AtuRefriUva.quantidade=String.valueOf(estoque);
            listaProdutos.add(AtuRefriUva);
            controllerproduto.alterarProduto(AtuRefriUva);*/
            
            //Altera no banco a mudança feita no Item Refri Berry
             /*int estoque=Integer.parseInt(txtEstoqueBerry.getText());
             int preco=Integer.parseInt(precoBerry.getText());
            Produto AtuRefriBerry = new Produto();
            
            AtuRefriBerry.nome="Refri Berry";
            AtuRefriBerry.id=1;
            AtuRefriBerry.preco=String.valueOf(preco);
            AtuRefriBerry.quantidade=String.valueOf(estoque);
            listaProdutos.add(AtuRefriBerry);
            controllerproduto.alterarProduto(AtuRefriBerry);
            */
             
            controllerpedido.SalvarPedidos(listaPedidos); // Salva os pedidos da lista
             AtuUva();
             AtuBerry();
             AtuMorango();
             AtuLaranja();
             //salva o total em uma variavel statica para mostrar em outra tela
             Pedidos.Total=Float.parseFloat(precoTotal.getText());
             //chama a outra tela
             Pagamento pag= new Pagamento();
             pag.show();
             this.dispose();
             
             
            //finalizando a compra,salvando numa lista pra depois enviar pro banco
            /*Pedidos uva = new Pedidos();
            uva.IdUsuario=DaoUsuario.UserId;
            uva.nome="Refri Uva";
            uva.preco=precoUva.getText();
            
            Pedidos berry = new Pedidos();
            berry.IdUsuario=DaoUsuario.UserId;
            berry.nome="Refri Berry";
            berry.preco=precoBerry.getText();
            
            Pedidos morango = new Pedidos();
            morango.IdUsuario=DaoUsuario.UserId;
            morango.nome="Refri Morango";
            morango.preco=precoMorango.getText();
            
            Pedidos laranja = new Pedidos();
            laranja.IdUsuario=DaoUsuario.UserId;
            laranja.nome="Refri laranja";
            laranja.preco=precoLaranja.getText(); */
                   
            

            /*List<Pedidos> lista = new ArrayList<>();
            lista.addAll(listaPedidos); // Faz uma cópia da lista listaPedidos (se ela estiver preenchida)
            */
            
          
            
            /*controllerpedido.SalvarPedidos(berry);
            controllerpedido.SalvarPedidos(morango);
            controllerpedido.SalvarPedidos(laranja);
            */
        
            
            
        
    }//GEN-LAST:event_jBFinalizarCompraActionPerformed

    private void jBAdicionarBerryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAdicionarBerryActionPerformed
        //cria um novo pedido
        Pedidos refriberry= new Pedidos();
     try{
          //um try catch para caso digite alguma letra ou algo que nao seja numero
        int estoque=Integer.parseInt(txtEstoqueBerry.getText());
        int quantidade =Integer.parseInt(txtQuantidadeBerry.getText());
        float preco=Float.parseFloat(precoBerry.getText());
        
        //verifica se o numero digitado é maior que o estoque disponível
        if(quantidade>estoque){
            JOptionPane.showMessageDialog(this, "Não existe estoque suficiente para o sua quantidade desejada");
            txtQuantidadeBerry.setText("");
        }
        else{
            //Adiciona Item a uma Lista,para depois ser adicionado no banco
          
           
            int resultado=estoque-quantidade;
            txtEstoqueBerry.setText(String.valueOf(resultado));
            float total=Float.parseFloat(precoTotal.getText());
            //calcula o preço dos items adicionados ao carrinho e mostra na tela
            float valor=preco*quantidade;
            total+=valor;
             precoTotal.setText(String.valueOf(total));
            refriberry.nome="Refri Berry";
            refriberry.IdProduto=2;
            refriberry.IdUsuario=controllerusuario.IdUsuario();
            refriberry.quantidade=String.valueOf(quantidade);
            refriberry.data= new Date();
            refriberry.preco=String.valueOf(preco);
            //adiciona o produto a lista de pedidos
            listaPedidos.add(refriberry);
            
            
           
            
        }
       }catch(NumberFormatException erro){
       JOptionPane.showMessageDialog(this, "Digite Apenas números"+erro);
       txtQuantidadeUva.setText("");
       }
     //apos escolher o que quer,exclui o que tinha digitado na caixa de texto
     txtQuantidadeBerry.setText("");
    }//GEN-LAST:event_jBAdicionarBerryActionPerformed

    private void jBAdicionarMorangoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAdicionarMorangoActionPerformed
       //cria um novo pedido
        Pedidos refrimorango= new Pedidos();
     try{
         //um try catch para caso digite alguma letra ou algo que nao seja numero
         //pega estoque,quantidade e preco do produto na tela
        int estoque=Integer.parseInt(txtEstoqueMorango.getText());
        int quantidade =Integer.parseInt(txtQuantidadeMorango.getText());
        float preco=Float.parseFloat(precoMorango.getText());
        
        //verifica se o numero digitado é maior que o estoque disponível
        if(quantidade>estoque){
            JOptionPane.showMessageDialog(this, "Não existe estoque suficiente para o sua quantidade desejada");
            txtQuantidadeMorango.setText("");
        }
        else{
            //Adiciona Item a uma Lista,para depois ser adicionado no banco
          
           
            int resultado=estoque-quantidade;
            txtEstoqueMorango.setText(String.valueOf(resultado));
            float total=Float.parseFloat(precoTotal.getText());
            //calcula o preço dos items adicionados ao carrinho e mostra na tela
            float valor=preco*quantidade;
            total+=valor;
             precoTotal.setText(String.valueOf(total));
            refrimorango.nome="Refri Morango";
            refrimorango.IdProduto=3;
            refrimorango.IdUsuario=controllerusuario.IdUsuario();
            refrimorango.quantidade=String.valueOf(quantidade);
            refrimorango.data= new Date();
            refrimorango.preco=String.valueOf(preco);
            //adiciona o produto a lista de pedidos
            listaPedidos.add(refrimorango);
            
           
            
        }
       }catch(NumberFormatException erro){
       JOptionPane.showMessageDialog(this, "Digite Apenas números"+erro);
       txtQuantidadeMorango.setText("");
       }
     txtQuantidadeMorango.setText("");
     //apos escolher o que quer,exclui o que tinha digitado na caixa de texto
    }//GEN-LAST:event_jBAdicionarMorangoActionPerformed

    private void jBAdicionarLaranjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAdicionarLaranjaActionPerformed
        //cria um novo pedido
        Pedidos refrilaranja= new Pedidos();
        //um try catch para caso digite alguma letra ou algo que nao seja numero
     try{
         //pega estoque,quantidade e preco do produto na tela
        int estoque=Integer.parseInt(txtEstoqueLaranja.getText());
        int quantidade =Integer.parseInt(txtQuantidadeLaranja.getText());
        float preco=Float.parseFloat(precoLaranja.getText());
        
        //verifica se o numero digitado é maior que o estoque disponível
        if(quantidade>estoque){
            JOptionPane.showMessageDialog(this, "Não existe estoque suficiente para o sua quantidade desejada");
            txtQuantidadeLaranja.setText("");
        }
        else{
            //Adiciona Item a uma Lista,para depois ser adicionado no banco
          
           
            int resultado=estoque-quantidade;
            txtEstoqueLaranja.setText(String.valueOf(resultado));
            float total=Float.parseFloat(precoTotal.getText());
            
            //calcula o preço dos items adicionados ao carrinho e mostra na tela
             float valor=preco*quantidade;
            total+=valor;
             precoTotal.setText(String.valueOf(total));
            refrilaranja.nome="Refri Laranja";
            refrilaranja.IdProduto=4;
            refrilaranja.IdUsuario=controllerusuario.IdUsuario();
            refrilaranja.quantidade=String.valueOf(quantidade);
            refrilaranja.data= new Date();
            refrilaranja.preco=String.valueOf(preco);
            //adiciona o produto a lista de pedidos
            listaPedidos.add(refrilaranja);
            
           
            
        }
       }catch(NumberFormatException erro){
       JOptionPane.showMessageDialog(this, "Digite Apenas números"+erro);
       txtQuantidadeLaranja.setText("");
       }
     //apos escolher o que quer,exclui o que tinha digitado na caixa de texto
     txtQuantidadeLaranja.setText("");
    }//GEN-LAST:event_jBAdicionarLaranjaActionPerformed

    private void jBAdicionarOutroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAdicionarOutroActionPerformed
       //Abre a tela para outros tipos de Produtos caso queira
       float preco =Float.parseFloat(precoTotal.getText());
       if(preco!=0){
           int resposta= JOptionPane.showConfirmDialog(null,"Deseja visualizar outros produtos? o carrinho atual será perdido","Confirmação",JOptionPane.YES_NO_OPTION);
        if(resposta == JOptionPane.YES_OPTION){
           Outros outros = new Outros();
        outros.show();
        this.dispose();
       }
       }else{
             Outros outros = new Outros();
        outros.show();
        this.dispose();
        }
       
       
       
    }//GEN-LAST:event_jBAdicionarOutroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FazerPedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Berry;
    private javax.swing.JLabel Laranja;
    private javax.swing.JLabel Morango;
    private javax.swing.JLabel Uva;
    private javax.swing.JButton jBAdicionarBerry;
    private javax.swing.JButton jBAdicionarLaranja;
    private javax.swing.JButton jBAdicionarMorango;
    private javax.swing.JButton jBAdicionarOutro;
    private javax.swing.JButton jBAdicionarUva;
    private javax.swing.JButton jBFinalizarCompra;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLEstoque1;
    private javax.swing.JLabel jLEstoque2;
    private javax.swing.JLabel jLEstoque3;
    private javax.swing.JLabel jLEstoque4;
    private javax.swing.JLabel jLPreco1;
    private javax.swing.JLabel jLPreco2;
    private javax.swing.JLabel jLPreco3;
    private javax.swing.JLabel jLPreco4;
    private javax.swing.JLabel jLTotal;
    private javax.swing.JLabel jLnumeroUnidades0;
    private javax.swing.JLabel jLnumeroUnidades1;
    private javax.swing.JLabel jLnumeroUnidades2;
    private javax.swing.JLabel jLnumeroUnidades3;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPAmarelo;
    private javax.swing.JPanel jPAzul;
    private javax.swing.JPanel jPRoxo;
    private javax.swing.JPanel jPVermelho;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel precoBerry;
    private javax.swing.JLabel precoLaranja;
    private javax.swing.JLabel precoMorango;
    private javax.swing.JLabel precoTotal;
    private javax.swing.JLabel precoUva;
    private javax.swing.JLabel txtEstoqueBerry;
    private javax.swing.JLabel txtEstoqueLaranja;
    private javax.swing.JLabel txtEstoqueMorango;
    private javax.swing.JLabel txtEstoqueUva;
    private javax.swing.JTextField txtQuantidadeBerry;
    private javax.swing.JTextField txtQuantidadeLaranja;
    private javax.swing.JTextField txtQuantidadeMorango;
    private javax.swing.JTextField txtQuantidadeUva;
    // End of variables declaration//GEN-END:variables
public void mostrarProdutoTela(){
        //mostra os produtos na tela,como quantidade,nome,estoque
        txtEstoqueUva.setText(""+lista.get(0).quantidade);
        txtEstoqueBerry.setText(lista.get(1).quantidade);
        txtEstoqueMorango.setText(lista.get(2).quantidade);
        txtEstoqueLaranja.setText(lista.get(3).quantidade);
        precoUva.setText(lista.get(0).preco);
        precoBerry.setText(lista.get(1).preco);
        precoMorango.setText(lista.get(2).preco);
        precoLaranja.setText(lista.get(3).preco);
}
 
 
 public void AtuUva(){
     //Altera no banco a mudança feita no Item Refri Uva
            int estoque=Integer.parseInt(txtEstoqueUva.getText());
            float preco=Float.parseFloat(precoUva.getText());
            Produto AtuRefriUva = new Produto();
            
            AtuRefriUva.nome="Refri Uva";
            AtuRefriUva.id=1;
            AtuRefriUva.preco=String.valueOf(preco);
            AtuRefriUva.quantidade=String.valueOf(estoque);
            listaProdutos.add(AtuRefriUva);
            controllerproduto.alterarProduto(AtuRefriUva);
 }
 public void AtuBerry(){
     //Altera no banco a mudança feita no Item Refri Berry
             int estoque=Integer.parseInt(txtEstoqueBerry.getText());
             float preco=Float.parseFloat(precoBerry.getText());
            Produto AtuRefriBerry = new Produto();
            
            AtuRefriBerry.nome="Refri Berry";
            AtuRefriBerry.id=2;
            AtuRefriBerry.preco=String.valueOf(preco);
            AtuRefriBerry.quantidade=String.valueOf(estoque);
            listaProdutos.add(AtuRefriBerry);
            controllerproduto.alterarProduto(AtuRefriBerry);
 }
 public void AtuMorango(){
     //Altera no banco a mudança feita no Item Refri Morango
             int estoque=Integer.parseInt(txtEstoqueMorango.getText());
             float preco=Float.parseFloat(precoMorango.getText());
            Produto AtuRefriMorango = new Produto();
            
            AtuRefriMorango.nome="Refri Morango";
            AtuRefriMorango.id=3;
            AtuRefriMorango.preco=String.valueOf(preco);
            AtuRefriMorango.quantidade=String.valueOf(estoque);
            listaProdutos.add(AtuRefriMorango);
            controllerproduto.alterarProduto(AtuRefriMorango);
 }
 public void AtuLaranja(){
     //Altera no banco a mudança feita no Item Refri Laranja
             int estoque=Integer.parseInt(txtEstoqueMorango.getText());
             float preco=Float.parseFloat(precoMorango.getText());
            Produto AtuRefriLaranja = new Produto();
            
            AtuRefriLaranja.nome="Refri Laranja";
            AtuRefriLaranja.id=4;
            AtuRefriLaranja.preco=String.valueOf(preco);
            AtuRefriLaranja.quantidade=String.valueOf(estoque);
            listaProdutos.add(AtuRefriLaranja);
            controllerproduto.alterarProduto(AtuRefriLaranja);
 }
}
